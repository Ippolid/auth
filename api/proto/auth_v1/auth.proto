//syntax = "proto3";
//
//package auth_v1;
//
//import "google/protobuf/timestamp.proto";
//import "google/protobuf/empty.proto";
//import "google/protobuf/wrappers.proto";
//
//
//option go_package = "github.com/Ippolid/auth/tree/main/grpc/auth_v1;auth_v1";
//
//service AuthV1 {
//  rpc Create(CreateRequest) returns (CreateResponse);
//  rpc Get(GetRequest) returns (GetResponse);
//  rpc Update(UpdateRequest) returns (google.protobuf.Empty);
//  rpc Delete(DeleteRequest) returns (google.protobuf.Empty);
//}
//
//
//enum Role {
//  USER = 0;
//  ADMIN = 1;
//}
//
//message UserInfo {
//  string name = 1;
//  string email = 2;
//}
//
//message UserInfoCreate{
//  UserInfo user=1;
//  string password = 2;
//  string password_confirm = 3;
//  Role role = 4;
//}
//
//message UserGet {
//  int64 id = 1;
//  UserInfo info = 2;
//  Role role = 3;
//  google.protobuf.Timestamp created_at = 4;
//  google.protobuf.Timestamp updated_at = 5;
//}
//
//
//message CreateRequest {
//  UserInfoCreate info = 1;
//}
//
//message CreateResponse {
//  int64 id = 1;
//}
//
//message GetRequest {
//  int64 id = 1;
//}
//
//message GetResponse {
//  UserGet user = 1;
//}
//
//message UpdateRequest {
//  int64 id = 1;
//  UserInfo info = 2;
//}
//
//message DeleteRequest {
//  int64 id = 1;
//}
//
//
syntax = "proto3";

package auth_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/Ippolid/auth/grpc/auth_v1;auth_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Auth API"
    version: "1.0.0"
    contact: {
      name: "Ippolid"
      email: "a@example.com"
    };
  };
  host: "localhost:8080",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service AuthV1 {
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/auth/v1/create"
      body: "*"
    };
  }

  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/auth/v1"
    };
  }

  rpc Update(UpdateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/auth/v1"
      body: "*"
    };
  }

  rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/auth/v1"
    };
  }
}

enum Role {
  USER = 0;
  ADMIN = 1;
}

message UserInfo {
  string name = 1 [(validate.rules).string = {min_len: 2, max_len: 100}];
  string email = 2 [(validate.rules).string.email = true];
}

message UserInfoCreate {
  UserInfo user = 1;
  string password = 2 [(validate.rules).string = {min_len: 8}];
  string password_confirm = 3 [(validate.rules).string = {min_len: 8}];
  Role role = 4;
}

message UserGet {
  int64 id = 1;
  UserInfo info = 2;
  Role role = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

message CreateRequest {
  UserInfoCreate info = 1;
}

message CreateResponse {
  int64 id = 1;
}

message GetRequest {
  int64 id = 1;
}

message GetResponse {
  UserGet user = 1;
}


message UpdateRequest {
  int64 id = 1;
  UserInfo info = 2;
}

message DeleteRequest {
  int64 id = 1;
}
