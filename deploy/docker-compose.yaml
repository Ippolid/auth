version: "3.9"

volumes:
  postgres_volume_local:
  redis-data:
  prometheus_data:

services:
  pg-local:
    image: postgres:14-alpine3.17
    environment:
      - POSTGRES_DB=${PG_DATABASE_NAME}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - postgres_volume_local:/var/lib/postgresql/data

  migrator-local:
    build:
      context: ..
      dockerfile: deploy/migration.Dockerfile
    restart: on-failure
    environment:
      - DB_HOST=pg-local

  server:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    restart: on-failure
    env_file:
      - secret.env
    ports:
      - "50051:50051"
      - "8080:8080"
      - "8090:8090"
      - "2112:2112"
    environment:
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DATABASE_NAME=${PG_DATABASE_NAME}
      - PG_PORT=5432
      - PG_HOST=pg-local
    depends_on:
      - pg-local
      - migrator-local
      - redis
    volumes:
      - ./server.crt:/deploy/server.crt:ro
      - ./server.key:/deploy/server.key:ro
      - ./server_cert.pem:/server_cert.pem:ro
      - ./access.yaml:/deploy/access.yaml:ro

  redis:
    image: redis:7.2.5-alpine3.20
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  prometheus:
    image: prom/prometheus:v2.37.9
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus

